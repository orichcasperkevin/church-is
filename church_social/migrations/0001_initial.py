# Generated by Django 2.2 on 2019-11-20 10:39

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('member', '0005_delete_client'),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(max_length=50)),
                ('open', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('topic', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=1600)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('open', models.BooleanField(default=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TagMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Discussion')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='PeerToPeerMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('time_stamp', models.DateTimeField(auto_now_add=True, null=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peer_to_peer_receiver', to='member.Member')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peer_to_peer_sender', to='member.Member')),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionReaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reaction', models.CharField(blank=True, choices=[('L', 'Like'), ('R', 'Reccomend'), ('H', 'Heart')], max_length=2, null=True)),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Discussion')),
                ('reaction_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
            ],
        ),
        migrations.CreateModel(
            name='DiscussionContribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contribution', models.TextField(max_length=1600)),
                ('creation_time', models.DateTimeField(auto_now_add=True)),
                ('votes_up', models.IntegerField(default=0)),
                ('votes_down', models.IntegerField(default=0)),
                ('contributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
                ('discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Discussion')),
            ],
        ),
        migrations.AddField(
            model_name='discussion',
            name='tags',
            field=models.ManyToManyField(blank=True, through='church_social.TagMembership', to='church_social.Tag'),
        ),
        migrations.CreateModel(
            name='commentToContribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(max_length=160)),
                ('votes_up', models.IntegerField(default=0)),
                ('votes_down', models.IntegerField(default=0)),
                ('commentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
                ('contribution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.DiscussionContribution')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Channel')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
            ],
        ),
        migrations.CreateModel(
            name='ChannelMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('type', models.CharField(blank=True, choices=[('A', 'Announcement'), ('S', 'Suggestion'), ('Q', 'Question'), ('M', 'message')], max_length=2, null=True)),
                ('time_stamp', models.DateTimeField(auto_now_add=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='church_social.Channel')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='member.Member')),
            ],
        ),
    ]
